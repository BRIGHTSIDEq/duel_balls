# main.py
import os
import shutil
import pygame
import time

from config import *
from simulation import GameState
from renderer import Renderer
from audio_generator import generate_intro_audio
from video_compiler import compile_video
from fighter_selector import FighterSelector, get_fighter_classes

def cleanup():
    """–û—á–∏—Å—Ç–∫–∞ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤ –∏ —Å–æ–∑–¥–∞–Ω–∏–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –ø–∞–ø–æ–∫"""
    if os.path.exists(FRAMES_DIR):
        shutil.rmtree(FRAMES_DIR)
    os.makedirs(FRAMES_DIR, exist_ok=True)
    
    # –°–æ–∑–¥–∞–µ–º –ø–∞–ø–∫—É assets –µ—Å–ª–∏ –µ—ë –Ω–µ—Ç (–¥–ª—è –∑–≤—É–∫–æ–≤)
    if not os.path.exists(ASSETS_DIR):
        os.makedirs(ASSETS_DIR, exist_ok=True)
        print(f"–°–æ–∑–¥–∞–Ω–∞ –ø–∞–ø–∫–∞ {ASSETS_DIR} –¥–ª—è –∑–≤—É–∫–æ–≤—ã—Ö —Ñ–∞–π–ª–æ–≤")

def create_fighters(fighter1_id, fighter2_id):
    """–°–æ–∑–¥–∞–µ—Ç –±–æ–π—Ü–æ–≤ –Ω–∞ –æ—Å–Ω–æ–≤–µ –≤—ã–±–æ—Ä–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    fighter_classes = get_fighter_classes()
    selector = FighterSelector()
    
    # –ü–æ–ª—É—á–∞–µ–º –∫–ª–∞—Å—Å—ã –±–æ–π—Ü–æ–≤
    fighter1_class_name = selector.fighters[fighter1_id]['class']
    fighter2_class_name = selector.fighters[fighter2_id]['class']
    
    fighter1_class = fighter_classes[fighter1_class_name]
    fighter2_class = fighter_classes[fighter2_class_name]
    
    # –°–æ–∑–¥–∞–µ–º –±–æ–π—Ü–æ–≤ –≤ –ø—Ä–æ—Ç–∏–≤–æ–ø–æ–ª–æ–∂–Ω—ã—Ö —É–≥–ª–∞—Ö –∞—Ä–µ–Ω—ã
    fighter1 = fighter1_class(x=ARENA_X + 100, y=ARENA_Y + 100)
    fighter2 = fighter2_class(x=ARENA_X + ARENA_WIDTH - 100, y=ARENA_Y + ARENA_HEIGHT - 100)
    
    return fighter1, fighter2

def main():
    pygame.init()
    
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –∑–≤—É–∫
    pygame.mixer.init()
    
    # –ù–û–í–´–ô –ò–ù–¢–ï–†–§–ï–ô–° –í–´–ë–û–†–ê –ë–û–ô–¶–û–í
    print("üéÆ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –≠–ü–ò–ß–ï–°–ö–£–Æ –ê–†–ï–ù–£!")
    print("‚öîÔ∏è –í—ã–±–µ—Ä–∏—Ç–µ –≤–∞—à–∏—Ö –±–æ–π—Ü–æ–≤ –¥–ª—è –¥—É—ç–ª–∏!")
    
    selector = FighterSelector()
    fighter1_id, fighter2_id = selector.select_fighters()
    
    if fighter1_id is None or fighter2_id is None:
        print("–í—ã–±–æ—Ä –æ—Ç–º–µ–Ω–µ–Ω.")
        return
    
    # –°–æ–∑–¥–∞–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö –±–æ–π—Ü–æ–≤
    ball1, ball2 = create_fighters(fighter1_id, fighter2_id)
    
    print(f"ü•ä {ball1.name} VS {ball2.name}")
    print(f"‚öîÔ∏è {ball1.weapon_type.title()} –ø—Ä–æ—Ç–∏–≤ {ball2.weapon_type.title()}")
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≥–ª–∞–≤–Ω—ã–π —ç–∫—Ä–∞–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é
    display_screen = pygame.display.set_mode((WIDTH, HEIGHT)) 
    pygame.display.set_caption(f"Epic Ball Duel - {ball1.name} VS {ball2.name}!")

    cleanup()

    renderer = Renderer(WIDTH, HEIGHT)
    game_state = GameState(ball1, ball2)

    # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∏–Ω—Ç—Ä–æ –∞—É–¥–∏–æ —Å –∏–º–µ–Ω–∞–º–∏ –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö –±–æ–π—Ü–æ–≤
    intro_text = f"Fight {ball1.name} versus {ball2.name} "
    generate_intro_audio(intro_text, INTRO_AUDIO_PATH)

    running = True
    frame_count = 0
    clock = pygame.time.Clock()
    max_frames = FPS * 150  # 2.5 –º–∏–Ω—É—Ç—ã –º–∞–∫—Å–∏–º—É–º

    print("üéÆ –ó–∞–ø—É—Å–∫–∞–µ–º –£–õ–£–ß–®–ï–ù–ù–£–Æ –ü–ò–ö–°–ï–õ–¨–ù–£–Æ –¥—É—ç–ª—å!")
    print("‚öîÔ∏è –ù–û–í–´–ï –û–°–û–ë–ï–ù–ù–û–°–¢–ò:")
    print("  ‚úÖ 4 —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö –±–æ–π—Ü–∞ —Å –æ—Å–æ–±—ã–º–∏ —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç—è–º–∏!")
    print("  ‚úÖ –¢–æ–ø–æ—Ä-–±–µ—Ä—Å–µ—Ä–∫: –†—ã–≤–æ–∫ + –Ω–µ—É—è–∑–≤–∏–º–æ—Å—Ç—å –∫–∞–∂–¥—ã–µ 5 —Å–µ–∫")
    print("  ‚úÖ –õ—É—á–Ω–∏–∫: –†–∞—Å—Ç—É—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç—Ä–µ–ª, –ø–∞—Ä–∏—Ä–æ–≤–∞–Ω–∏–µ —Å—Ç—Ä–µ–ª")
    print("  ‚úÖ –£–õ–£–ß–®–ï–ù–ù–û–ï –ø–∞—Ä–∏—Ä–æ–≤–∞–Ω–∏–µ: –∑–∞–º–æ—Ä–æ–∑–∫–∞ –≤—Ä–µ–º–µ–Ω–∏ + —ç—Ñ—Ñ–µ–∫—Ç—ã")
    print("  ‚úÖ –î–∏–Ω–∞–º–∏—á–µ—Å–∫–∏–µ –∑–∞–≥–æ–ª–æ–≤–∫–∏ –∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏")
    print("  ‚úÖ –û—Ç–¥–µ–ª—å–Ω—ã–µ –∑–≤—É–∫–∏ –¥–ª—è —É–¥–∞—Ä–æ–≤ –∏ –ø–∞—Ä–∏—Ä–æ–≤–∞–Ω–∏—è")

    while running and frame_count < max_frames:
        for event in pygame.event.get():
            if event.type == pygame.QUIT:
                running = False

        game_state.update()

        # –†–µ–Ω–¥–µ—Ä
        screen_surface = renderer.draw(game_state)
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –Ω–∞ —ç–∫—Ä–∞–Ω–µ
        display_screen.blit(screen_surface, (0, 0))
        pygame.display.flip()

        # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∫–∞–¥—Ä–∞ –¥–ª—è –≤–∏–¥–µ–æ
        frame_filename = os.path.join(FRAMES_DIR, f"frame_{frame_count:05d}.png")
        pygame.image.save(screen_surface, frame_filename)

        frame_count += 1
        clock.tick(FPS)

        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å
        if frame_count % (FPS * 15) == 0:  # –ö–∞–∂–¥—ã–µ 15 —Å–µ–∫—É–Ω–¥
            minutes = frame_count // FPS // 60
            seconds = (frame_count // FPS) % 60
            
            # –ê–¥–∞–ø—Ç–∏–≤–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–∏–ø–∞ –±–æ–π—Ü–∞
            stat1 = f"‚öîÔ∏è{int(ball1.weapon_length)}" if hasattr(ball1, 'weapon_length') else f"üèπ{getattr(ball1, 'arrows_per_shot', 1)}"
            stat2 = f"‚öîÔ∏è{int(ball2.weapon_length)}" if hasattr(ball2, 'weapon_length') else f"üèπ{getattr(ball2, 'arrows_per_shot', 1)}"
            
            print(f"‚è±Ô∏è {minutes:02d}:{seconds:02d} | "
                  f"üíö {ball1.name}: {int(ball1.health)} ({stat1}) | "
                  f"üíô {ball2.name}: {int(ball2.health)} ({stat2}) | "
                  f"üí• Hits: {len(game_state.hit_events)} | "
                  f"‚ú® Parries: {len(game_state.parry_events)}")

        if game_state.winner:
            winner_ball = ball1 if game_state.winner == ball1.name else ball2
            print(f"üèÜ –ü–û–ë–ï–î–ò–¢–ï–õ–¨: {game_state.winner}!")
            print(f"üí™ –§–∏–Ω–∞–ª—å–Ω—ã–π —É—Ä–æ–Ω: {int(winner_ball.stats['damage'])}")
            
            # –ê–¥–∞–ø—Ç–∏–≤–Ω–∞—è —Ñ–∏–Ω–∞–ª—å–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
            if hasattr(winner_ball, 'weapon_length'):
                print(f"‚öîÔ∏è –§–∏–Ω–∞–ª—å–Ω–∞—è –¥–ª–∏–Ω–∞ –æ—Ä—É–∂–∏—è: {int(winner_ball.weapon_length)} –ø–∏–∫—Å–µ–ª–µ–π!")
            elif hasattr(winner_ball, 'arrows_per_shot'):
                print(f"üèπ –§–∏–Ω–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç—Ä–µ–ª: {winner_ball.arrows_per_shot} –∑–∞ –∑–∞–ª–ø!")
            
            print(f"üí• –í—Å–µ–≥–æ —É–¥–∞—Ä–æ–≤ –≤ –±–æ—é: {len(game_state.hit_events)}")
            print(f"‚ú® –í—Å–µ–≥–æ –ø–∞—Ä–∏—Ä–æ–≤–∞–Ω–∏–π: {len(game_state.parry_events)}")
            
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º –µ—â–µ 3 —Å–µ–∫—É–Ω–¥—ã –∫–∞–¥—Ä–æ–≤ —Å –ø–æ–±–µ–¥–Ω—ã–º —ç–∫—Ä–∞–Ω–æ–º
            for victory_frame in range(FPS * 2):
                screen_surface = renderer.draw(game_state)
                display_screen.blit(screen_surface, (0, 0))
                pygame.display.flip()
                
                frame_filename = os.path.join(FRAMES_DIR, f"frame_{frame_count:05d}.png")
                pygame.image.save(screen_surface, frame_filename)
                frame_count += 1
                clock.tick(FPS)
            running = False

    pygame.quit()
    
    print("üé¨ –ö–æ–º–ø–∏–ª–∏—Ä—É–µ–º —Ñ–∏–Ω–∞–ª—å–Ω–æ–µ –≤–∏–¥–µ–æ...")
    
    # –ü–µ—Ä–µ–¥–∞–µ–º –∫–∞–∫ —É–¥–∞—Ä—ã, —Ç–∞–∫ –∏ –ø–∞—Ä–∏—Ä–æ–≤–∞–Ω–∏—è –¥–ª—è –∑–≤—É–∫–æ–≤
    all_sound_events = game_state.hit_events + game_state.parry_events
    compile_video(FRAMES_DIR, INTRO_AUDIO_PATH, HIT_SOUND_PATH, all_sound_events, 
                 FINAL_VIDEO_PATH, FPS, game_state.parry_events)
    
    # –û—á–∏—â–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–µ –∫–∞–¥—Ä—ã
    if os.path.exists(FRAMES_DIR):
        shutil.rmtree(FRAMES_DIR)
    
    print(f"‚úÖ –ì–û–¢–û–í–û! –≠–ø–∏—á–µ—Å–∫–æ–µ –≤–∏–¥–µ–æ —Å –Ω–æ–≤—ã–º–∏ –±–æ–π—Ü–∞–º–∏: {FINAL_VIDEO_PATH}")
    print("üé• –ì–æ—Ç–æ–≤–æ –¥–ª—è TikTok/YouTube Shorts!")
    print(f"‚öîÔ∏è –î—É—ç–ª—å: {ball1.name} VS {ball2.name}")

if __name__ == "__main__":
    main()