# main.py
import os
import shutil
import pygame
import time

from config import *
from simulation import GameState
from renderer import Renderer
from audio_generator import generate_intro_audio
from video_compiler import compile_video

# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —É–ª—É—á—à–µ–Ω–Ω—ã—Ö –±–æ–π—Ü–æ–≤
from balls.sword_ball import SwordBall
from balls.spear_ball import SpearBall

def cleanup():
    """–û—á–∏—Å—Ç–∫–∞ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤ –∏ —Å–æ–∑–¥–∞–Ω–∏–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –ø–∞–ø–æ–∫"""
    if os.path.exists(FRAMES_DIR):
        shutil.rmtree(FRAMES_DIR)
    os.makedirs(FRAMES_DIR, exist_ok=True)
    
    # –°–æ–∑–¥–∞–µ–º –ø–∞–ø–∫—É assets –µ—Å–ª–∏ –µ—ë –Ω–µ—Ç (–¥–ª—è –∑–≤—É–∫–æ–≤)
    if not os.path.exists(ASSETS_DIR):
        os.makedirs(ASSETS_DIR, exist_ok=True)
        print(f"–°–æ–∑–¥–∞–Ω–∞ –ø–∞–ø–∫–∞ {ASSETS_DIR} –¥–ª—è –∑–≤—É–∫–æ–≤—ã—Ö —Ñ–∞–π–ª–æ–≤")

def main():
    pygame.init()
    
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –∑–≤—É–∫
    pygame.mixer.init()

    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≥–ª–∞–≤–Ω—ã–π —ç–∫—Ä–∞–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é
    display_screen = pygame.display.set_mode((WIDTH, HEIGHT)) 
    pygame.display.set_caption("Epic Ball Duel - Giant Pixel Weapons Combat!")

    cleanup()

    renderer = Renderer(WIDTH, HEIGHT)

    # –°–æ–∑–¥–∞–µ–º —É–ª—É—á—à–µ–Ω–Ω—ã—Ö –±–æ–π—Ü–æ–≤ —Å –û–ì–†–û–ú–ù–´–ú–ò –ø–∏–∫—Å–µ–ª—å–Ω—ã–º–∏ –æ—Ä—É–∂–∏—è–º–∏
    # –ü–æ–∑–∏—Ü–∏–æ–Ω–∏—Ä—É–µ–º –∏—Ö –≤ –ø—Ä–æ—Ç–∏–≤–æ–ø–æ–ª–æ–∂–Ω—ã—Ö —É–≥–ª–∞—Ö –∞—Ä–µ–Ω—ã
    ball1 = SwordBall(x=ARENA_X + 100, y=ARENA_Y + 100)
    ball2 = SpearBall(x=ARENA_X + ARENA_WIDTH - 100, y=ARENA_Y + ARENA_HEIGHT - 100)

    game_state = GameState(ball1, ball2)

    # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∏–Ω—Ç—Ä–æ –∞—É–¥–∏–æ
    intro_text = f"Fight {ball1.name} versus {ball2.name} "
    generate_intro_audio(intro_text, INTRO_AUDIO_PATH)

    running = True
    frame_count = 0
    clock = pygame.time.Clock()
    max_frames = FPS * 150  # 2.5 –º–∏–Ω—É—Ç—ã –º–∞–∫—Å–∏–º—É–º

    print("üéÆ –ó–∞–ø—É—Å–∫–∞–µ–º –£–õ–£–ß–®–ï–ù–ù–£–Æ –ü–ò–ö–°–ï–õ–¨–ù–£–Æ –¥—É—ç–ª—å!")
    print("‚öîÔ∏è –ù–û–í–´–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–Ø:")
    print("  ‚úÖ –û—Ä—É–∂–∏–µ —É–≤–µ–ª–∏—á–µ–Ω–æ –≤ 2 —Ä–∞–∑–∞ - —Ç–µ–ø–µ—Ä—å –æ—Ç–ª–∏—á–Ω–æ –≤–∏–¥–Ω–æ!")
    print("  ‚úÖ –¢–µ–º–Ω—ã–µ –∫–æ–Ω—Ç—É—Ä—ã –Ω–∞ –æ—Ä—É–∂–∏–∏ –¥–ª—è –∫–æ–Ω—Ç—Ä–∞—Å—Ç–Ω–æ—Å—Ç–∏")
    print("  ‚úÖ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–æ –≤–µ—Ä—Ç–∏–∫–∞–ª—å–Ω–æ–µ –∑–∞—Ü–∏–∫–ª–∏–≤–∞–Ω–∏–µ —à–∞—Ä–∏–∫–æ–≤")
    print("  ‚úÖ –ê—Ä–µ–Ω–∞ –ø–µ—Ä–µ–º–µ—â–µ–Ω–∞ –≤ —Ü–µ–Ω—Ç—Ä —ç–∫—Ä–∞–Ω–∞")
    print("  ‚úÖ –ü—Ä–∏—è—Ç–Ω—ã–µ —Ü–≤–µ—Ç–∞ –∑–¥–æ—Ä–æ–≤—å—è (–∑–µ–ª–µ–Ω—ã–π/–æ—Ä–∞–Ω–∂–µ–≤—ã–π/–∫—Ä–∞—Å–Ω—ã–π)")
    print("  ‚úÖ –ù–æ–≤—ã–π —ç—Ñ—Ñ–µ–∫—Ç –ø–∞—Ä–∏—Ä–æ–≤–∞–Ω–∏—è - –∏—Å–∫—Ä—ã –∫–∞–∫ –≤ —Ä–µ–∞–ª—å–Ω–æ–π –∂–∏–∑–Ω–∏!")
    print("  ‚úÖ –ú–∏–∫—Ä–æ-—Å—Ç–∞–Ω –≤—Å–µ–≥–æ 1 –∫–∞–¥—Ä –≤–º–µ—Å—Ç–æ –ª–∞–≥–æ–≤")
    print("  ‚úÖ –£–ª—É—á—à–µ–Ω–Ω–∞—è —Ñ–∏–∑–∏–∫–∞ - –º–µ–Ω—å—à–µ —Ö–∞–æ—Ç–∏—á–Ω–æ—Å—Ç–∏")

    while running and frame_count < max_frames:
        for event in pygame.event.get():
            if event.type == pygame.QUIT:
                running = False

        # –ë–æ–ª—å—à–µ –ù–ï–¢ –ª–∞–≥–æ–≤ –æ—Ç –ø–∞—Ä–∏—Ä–æ–≤–∞–Ω–∏—è - —Ç–æ–ª—å–∫–æ 1 –∫–∞–¥—Ä —ç—Ñ—Ñ–µ–∫—Ç!
        
        game_state.update()

        # –†–µ–Ω–¥–µ—Ä
        screen_surface = renderer.draw(game_state)
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –Ω–∞ —ç–∫—Ä–∞–Ω–µ
        display_screen.blit(screen_surface, (0, 0))
        pygame.display.flip()

        # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∫–∞–¥—Ä–∞ –¥–ª—è –≤–∏–¥–µ–æ
        frame_filename = os.path.join(FRAMES_DIR, f"frame_{frame_count:05d}.png")
        pygame.image.save(screen_surface, frame_filename)

        frame_count += 1
        clock.tick(FPS)

        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å
        if frame_count % (FPS * 15) == 0:  # –ö–∞–∂–¥—ã–µ 15 —Å–µ–∫—É–Ω–¥
            minutes = frame_count // FPS // 60
            seconds = (frame_count // FPS) % 60
            print(f"‚è±Ô∏è {minutes:02d}:{seconds:02d} | "
                  f"üíö {ball1.name}: {int(ball1.health)} (‚öîÔ∏è{int(ball1.weapon_length)}) | "
                  f"üíô {ball2.name}: {int(ball2.health)} (üî±{int(ball2.weapon_length)}) | "
                  f"üí• Hits: {len(game_state.hit_events)} | "
                  f"‚ú® Parries: {sum(1 for i, frame in enumerate(game_state.hit_events) if i > 0 and frame - game_state.hit_events[i-1] < 5)}")

        if game_state.winner:
            winner_ball = ball1 if game_state.winner == ball1.name else ball2
            print(f"üèÜ –ü–û–ë–ï–î–ò–¢–ï–õ–¨: {game_state.winner}!")
            print(f"üí™ –§–∏–Ω–∞–ª—å–Ω—ã–π —É—Ä–æ–Ω: {int(winner_ball.stats['damage'])}")
            print(f"‚öîÔ∏è –§–∏–Ω–∞–ª—å–Ω–∞—è –¥–ª–∏–Ω–∞ –æ—Ä—É–∂–∏—è: {int(winner_ball.weapon_length)} –ø–∏–∫—Å–µ–ª–µ–π!")
            print(f"üí• –í—Å–µ–≥–æ —É–¥–∞—Ä–æ–≤ –≤ –±–æ—é: {len(game_state.hit_events)}")
            print(f"üéØ –≠—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –æ—Ä—É–∂–∏—è: {int(winner_ball.weapon_length / 200 * 100)}% —Ä–æ—Å—Ç–∞!")
            
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º –µ—â–µ 5 —Å–µ–∫—É–Ω–¥ –∫–∞–¥—Ä–æ–≤ —Å –ø–æ–±–µ–¥–Ω—ã–º —ç–∫—Ä–∞–Ω–æ–º
            for victory_frame in range(FPS * 2):
                screen_surface = renderer.draw(game_state)
                display_screen.blit(screen_surface, (0, 0))
                pygame.display.flip()
                
                frame_filename = os.path.join(FRAMES_DIR, f"frame_{frame_count:05d}.png")
                pygame.image.save(screen_surface, frame_filename)
                frame_count += 1
                clock.tick(FPS)
            running = False

    pygame.quit()
    
    print("üé¨ –ö–æ–º–ø–∏–ª–∏—Ä—É–µ–º —Ñ–∏–Ω–∞–ª—å–Ω–æ–µ –≤–∏–¥–µ–æ...")
    compile_video(FRAMES_DIR, INTRO_AUDIO_PATH, HIT_SOUND_PATH, game_state.hit_events, FINAL_VIDEO_PATH, FPS)
    
    # –û—á–∏—â–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–µ –∫–∞–¥—Ä—ã
    if os.path.exists(FRAMES_DIR):
        shutil.rmtree(FRAMES_DIR)
    
    print(f"‚úÖ –ì–û–¢–û–í–û! –£–ª—É—á—à–µ–Ω–Ω–æ–µ –ø–∏–∫—Å–µ–ª—å–Ω–æ–µ —ç–ø–∏—á–µ—Å–∫–æ–µ –≤–∏–¥–µ–æ: {FINAL_VIDEO_PATH}")
    print("üé• –ì–æ—Ç–æ–≤–æ –¥–ª—è TikTok")
if __name__ == "__main__":
    main()